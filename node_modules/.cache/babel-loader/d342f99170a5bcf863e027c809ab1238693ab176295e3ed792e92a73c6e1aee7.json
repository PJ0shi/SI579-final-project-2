{"ast":null,"code":"var _jsxFileName = \"/workspaces/SI579-final-project-2/src/FeedbackForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport FormItem from \"./FormItem.js\";\nimport FeedbackCard from \"./FeedbackCard.js\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\n//These are the initial form values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  firstName: \"\",\n  lastName: \"\",\n  startDate: \"\",\n  endDate: \"\"\n};\nconst FeedbackForm = () => {\n  _s();\n  //data for the entire form\n  const [formData, setFormData] = useState(initialFormValues);\n  // const noneEmpty = Object.values(formData).every(item => item.length > 0)\n\n  //checking if the form fields are empty (noneEmpty=true if all are filled) \n  const noneEmpty = String(formData.firstName) !== \"\" && String(formData.startDate) !== \"\" && String(formData.course) !== \"\" && String(formData.feedback) !== \"\";\n  const [inputText, setInputText] = useState(\"\");\n\n  //list of all the feedbacks\n  const [feedbacks, setFeedbacks] = useState([]);\n\n  // updates feedbacks through setFeedbacks \n  const addFeedback = () => {\n    setFeedbacks(previousValue => {\n      return [...previousValue, formData];\n    });\n    setFormData(initialFormValues);\n    console.log(\"added reminder\");\n    console.log(feedbacks);\n  };\n\n  //removing a feedback\n  const removeFeedback = text => {\n    setFeedbacks(previousFeedbacks => previousFeedbacks.filter(feedback => feedback.firstName !== text));\n  };\n  const inputHandler = (e, stateName) => {\n    setFormData(previousState => {\n      return {\n        ...previousState,\n        [stateName]: e.target.value\n      };\n    });\n  };\n  const submitForm = e => {\n    e.preventDefault();\n    // setMessage(`${formData.firstName} ${formData.lastName}${formData.startDate} ${formData.endDate}`)\n    setFormData(initialFormValues);\n    // Call the updateReminder function passed down from the parent component\n  };\n\n  const updateReminder = (firstName, updatedFeedback) => {\n    // Implement logic to update the reminder in your data store or state\n    // For example, if reminders is a state variable:\n    setFeedbacks(prevFeedbacks => prevFeedbacks.map(feedback => feedback.firstName === firstName ? {\n      ...feedback,\n      feedback: updatedFeedback\n    } : feedback));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"60rem\",\n          padding: \"2rem\",\n          margin: \"2%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"col col-sm-12 col-lg-5\",\n          onSubmit: submitForm,\n          children: [/*#__PURE__*/_jsxDEV(FormItem, {\n            label: \"Name\",\n            stateName: \"firstName\",\n            type: \"text\",\n            formData: formData,\n            inputHandler: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n            label: \"Entry Date\",\n            stateName: \"startDate\",\n            type: \"date\",\n            formData: formData,\n            inputHandler: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n            label: \"Course\",\n            stateName: \"course\",\n            type: \"text\",\n            formData: formData,\n            inputHandler: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n            label: \"Feedback\",\n            stateName: \"feedback\",\n            type: \"text\",\n            formData: formData,\n            inputHandler: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: addFeedback,\n              disabled: !noneEmpty,\n              children: \"Add Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-sm-12 col-lg-8\",\n        children: [feedbacks.length === 0 && \"no entries\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: feedbacks.length > 0 && feedbacks.map((feedback, index) =>\n          /*#__PURE__*/\n          // <li key={index}>{`${reminder.firstName} ${reminder.lastName} ${reminder.startDate} ${reminder.course}`}<button onClick={(e) => removeReminder(reminder.firstName)} >X</button></li>)}\n          _jsxDEV(FeedbackCard, {\n            feedback: feedback,\n            removeFeedback: removeFeedback,\n            updateFeedback: updateFeedback\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(FeedbackForm, \"4eHkWmnQi4h82REo6JZJH2SY85s=\");\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["useState","useEffect","FormItem","FeedbackCard","Button","Form","Card","jsxDEV","_jsxDEV","initialFormValues","firstName","lastName","startDate","endDate","FeedbackForm","_s","formData","setFormData","noneEmpty","String","course","feedback","inputText","setInputText","feedbacks","setFeedbacks","addFeedback","previousValue","console","log","removeFeedback","text","previousFeedbacks","filter","inputHandler","e","stateName","previousState","target","value","submitForm","preventDefault","updateReminder","updatedFeedback","prevFeedbacks","map","children","style","width","padding","margin","className","onSubmit","label","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","index","updateFeedback","_c","$RefreshReg$"],"sources":["/workspaces/SI579-final-project-2/src/FeedbackForm.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\r\nimport FormItem from \"./FormItem.js\";\r\nimport FeedbackCard from \"./FeedbackCard.js\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n//These are the initial form values\r\nconst initialFormValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  startDate: \"\",\r\n  endDate: \"\",\r\n};\r\n\r\n\r\nconst FeedbackForm = () => {\r\n//data for the entire form\r\n  const [formData, setFormData] = useState(initialFormValues);\r\n  // const noneEmpty = Object.values(formData).every(item => item.length > 0)\r\n\r\n//checking if the form fields are empty (noneEmpty=true if all are filled) \r\n  const noneEmpty =\r\n    String(formData.firstName) !== \"\" &&\r\n    String(formData.startDate) !== \"\" &&\r\n    String(formData.course) !== \"\" &&\r\n    String(formData.feedback) !== \"\";\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  //list of all the feedbacks\r\n  const [feedbacks, setFeedbacks] = useState([]);\r\n\r\n  // updates feedbacks through setFeedbacks \r\n  const addFeedback = () => {\r\n    setFeedbacks((previousValue) => {\r\n      return [...previousValue, formData];\r\n    });\r\n\r\n    setFormData(initialFormValues);\r\n    console.log(\"added reminder\");\r\n    console.log(feedbacks);\r\n  };\r\n\r\n//removing a feedback\r\n  const removeFeedback = (text) => {\r\n    setFeedbacks((previousFeedbacks) =>\r\n      previousFeedbacks.filter((feedback) => feedback.firstName !== text)\r\n    );\r\n  };\r\n\r\n  const inputHandler = (e, stateName) => {\r\n    setFormData((previousState) => {\r\n      return {\r\n        ...previousState,\r\n        [stateName]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    // setMessage(`${formData.firstName} ${formData.lastName}${formData.startDate} ${formData.endDate}`)\r\n    setFormData(initialFormValues);\r\n    // Call the updateReminder function passed down from the parent component\r\n  };\r\n\r\n  const updateReminder = (firstName, updatedFeedback) => {\r\n    // Implement logic to update the reminder in your data store or state\r\n    // For example, if reminders is a state variable:\r\n    setFeedbacks((prevFeedbacks) =>\r\n      prevFeedbacks.map((feedback) =>\r\n      feedback.firstName === firstName\r\n          ? { ...feedback, feedback: updatedFeedback }\r\n          : feedback\r\n      )\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Card style={{ width: \"60rem\", padding: \"2rem\", margin: \"2%\" }}>\r\n          <form className=\"col col-sm-12 col-lg-5\" onSubmit={submitForm}>\r\n            <FormItem\r\n              label=\"Name\"\r\n              stateName=\"firstName\"\r\n              type=\"text\"\r\n              formData={formData}\r\n              inputHandler={inputHandler}\r\n            />\r\n            {/* <FormItem label=\"Last Name\" stateName=\"lastName\" type=\"text\" formData={formData} inputHandler={inputHandler} />       */}\r\n            <FormItem\r\n              label=\"Entry Date\"\r\n              stateName=\"startDate\"\r\n              type=\"date\"\r\n              formData={formData}\r\n              inputHandler={inputHandler}\r\n            />\r\n            {/* <FormItem label=\"End Date\" stateName=\"endDate\" type=\"date\" formData={formData} inputHandler={inputHandler} />       */}\r\n            <FormItem\r\n              label=\"Course\"\r\n              stateName=\"course\"\r\n              type=\"text\"\r\n              formData={formData}\r\n              inputHandler={inputHandler}\r\n            />\r\n            <FormItem\r\n              label=\"Feedback\"\r\n              stateName=\"feedback\"\r\n              type=\"text\"\r\n              formData={formData}\r\n              inputHandler={inputHandler}\r\n            />\r\n\r\n            <div className=\"mb-3\">\r\n              {/* <button disabled={!noneEmpty && !startBeforeEnd} type='submit'>Submit Vacation Request</button> */}\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={addFeedback}\r\n                disabled={!noneEmpty}\r\n              >\r\n                Add Feedback\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n\r\n        {/* the returned list of reminders */}\r\n        <div className=\"col col-sm-12 col-lg-8\">\r\n          {feedbacks.length === 0 && \"no entries\"}\r\n          <ul>\r\n            {feedbacks.length > 0 &&\r\n              feedbacks.map((feedback, index) => (\r\n                // <li key={index}>{`${reminder.firstName} ${reminder.lastName} ${reminder.startDate} ${reminder.course}`}<button onClick={(e) => removeReminder(reminder.firstName)} >X</button></li>)}\r\n                <FeedbackCard\r\n                  key={index}\r\n                  feedback={feedback}\r\n                  removeFeedback={removeFeedback}\r\n                  updateFeedback={updateFeedback}\r\n                />\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default FeedbackForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}