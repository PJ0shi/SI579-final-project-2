{"ast":null,"code":"var _jsxFileName = \"/workspaces/SI579-final-project-2/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleRegister = () => {\n    // Validate input\n    if (!username || !password) {\n      alert('Please enter both username and password.');\n      return;\n    }\n\n    // Check if the username already exists\n    if (users.some(user => user.username === username)) {\n      alert('Username already exists. Please choose a different one.');\n      return;\n    }\n\n    // Create a new user object\n    const newUser = {\n      username: username,\n      password: password\n    };\n\n    // Update the users array and save to local storage\n    const updatedUsers = [...users, newUser];\n    setUsers(updatedUsers);\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n\n    // Reset the form\n    setUsername('');\n    setPassword('');\n\n    // Redirect to the FeedbackForm after successful registration\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"X7IZQn4SKdLlaZgTB3R9Y7vm3Fo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","users","setUsers","navigate","handleRegister","alert","some","user","newUser","updatedUsers","localStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/workspaces/SI579-final-project-2/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleRegister = () => {\n    // Validate input\n    if (!username || !password) {\n      alert('Please enter both username and password.');\n      return;\n    }\n\n    // Check if the username already exists\n    if (users.some((user) => user.username === username)) {\n      alert('Username already exists. Please choose a different one.');\n      return;\n    }\n\n    // Create a new user object\n    const newUser = {\n      username: username,\n      password: password,\n    };\n\n    // Update the users array and save to local storage\n    const updatedUsers = [...users, newUser];\n    setUsers(updatedUsers);\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n\n    // Reset the form\n    setUsername('');\n    setPassword('');\n\n    // Redirect to the FeedbackForm after successful registration\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <h2>Create Account</h2>\n      <form>\n        <label>\n          Username:\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n        <br />\n        <button type=\"button\" onClick={handleRegister}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}